--[[
    Advanced Obby Game Script
    Features:
    - Extended obstacle course (spinning, moving, scaling, and disappearing obstacles)
    - Leaderboard for player points
    - Checkpoint-based respawn system
    - Dynamic timer UI
    - Modern LuaU coding standards (typed functions, efficient loops, etc.)
--]]

--// Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")
local StarterGui = game:GetService("StarterGui")

--// Constants
local START_POSITION = Vector3.new(0, 5, 0) -- Player spawn/start position
local FINISH_POSITION = Vector3.new(600, 5, 0) -- Finish line
local CHECKPOINT_POINTS = 10 -- Points per checkpoint
local RESPAWN_DELAY = 3 -- Respawn delay in seconds
local GAME_DURATION = 300 -- Game duration (5 minutes)

-- UI Settings
local TIMER_TEXT_TEMPLATE = "Time Remaining: %d:%02d"

-- Folders for game organization
local CheckpointsFolder = Instance.new("Folder", workspace)
CheckpointsFolder.Name = "Checkpoints"

local ObstaclesFolder = Instance.new("Folder", workspace)
ObstaclesFolder.Name = "Obstacles"

--// Helper Functions

-- Create a leaderboard for the player
local function setupLeaderboard(player: Player)
    local leaderstats = Instance.new("Folder")
    leaderstats.Name = "leaderstats"
    leaderstats.Parent = player

    local points = Instance.new("IntValue")
    points.Name = "Points"
    points.Value = 0
    points.Parent = leaderstats

    -- Track the player's checkpoint
    local checkpoint = Instance.new("Vector3Value")
    checkpoint.Name = "CurrentCheckpoint"
    checkpoint.Value = START_POSITION
    checkpoint.Parent = player
end

-- Spinning Obstacle
local function createSpinningPart(position: Vector3, size: Vector3, spinSpeed: number): Part
    local part = Instance.new("Part")
    part.Size = size
    part.Position = position
    part.Anchored = true
    part.BrickColor = BrickColor.new("Bright red")
    part.Material = Enum.Material.SmoothPlastic
    part.Parent = ObstaclesFolder

    local spinDirection = CFrame.Angles(0, math.rad(spinSpeed), 0)
    RunService.Stepped:Connect(function(_, deltaTime)
        part.CFrame = part.CFrame * spinDirection
    end)

    return part
end

-- Moving Obstacle
local function createMovingPart(startPos: Vector3, endPos: Vector3, size: Vector3, moveTime: number): Part
    local part = Instance.new("Part")
    part.Size = size
    part.Position = startPos
    part.Anchored = true
    part.BrickColor = BrickColor.new("Bright blue")
    part.Material = Enum.Material.Neon
    part.Parent = ObstaclesFolder

    local tweenInfo = TweenInfo.new(moveTime, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true)
    local tweenGoal = { Position = endPos }
    local tween = TweenService:Create(part, tweenInfo, tweenGoal)
    tween:Play()

    return part
end

-- Scaling Obstacle
local function createScalingPart(position: Vector3, size: Vector3, scaleMultiplier: number, scaleTime: number): Part
    local part = Instance.new("Part")
    part.Size = size
    part.Position = position
    part.Anchored = true
    part.BrickColor = BrickColor.new("Bright green")
    part.Material = Enum.Material.SmoothPlastic
    part.Parent = ObstaclesFolder

    local tweenInfo = TweenInfo.new(scaleTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true)
    local tweenGoal = { Size = size * scaleMultiplier }
    local tween = TweenService:Create(part, tweenInfo, tweenGoal)
    tween:Play()

    return part
end

-- Disappearing Obstacle
local function createDisappearingPart(position: Vector3, size: Vector3, disappearTime: number): Part
    local part = Instance.new("Part")
    part.Size = size
    part.Position = position
    part.Anchored = true
    part.BrickColor = BrickColor.new("Bright orange")
    part.Material = Enum.Material.SmoothPlastic
    part.Parent = ObstaclesFolder

    task.spawn(function()
        while true do
            part.CanCollide = false
            part.Transparency = 1
            task.wait(disappearTime)
            part.CanCollide = true
            part.Transparency = 0
            task.wait(disappearTime)
        end
    end)

    return part
end

-- Checkpoint Logic
local function createCheckpoint(position: Vector3, index: number)
    local checkpoint = Instance.new("Part")
    checkpoint.Size = Vector3.new(10, 1, 10)
    checkpoint.Position = position
    checkpoint.Anchored = true
    checkpoint.BrickColor = BrickColor.new("Bright yellow")
    checkpoint.Name = "Checkpoint" .. tostring(index)
    checkpoint.Parent = CheckpointsFolder

    checkpoint.Touched:Connect(function(hit)
        local player = Players:GetPlayerFromCharacter(hit.Parent)
        if not player then return end

        local currentCheckpoint = player:FindFirstChild("CurrentCheckpoint")
        if currentCheckpoint and currentCheckpoint.Value ~= position then
            currentCheckpoint.Value = position

            local points = player:FindFirstChild("leaderstats"):FindFirstChild("Points")
            if points then
                points.Value += CHECKPOINT_POINTS
            end
        end
    end)
end

-- UI Timer Display
local function displayGameTimer()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "GameTimer"
    screenGui.Parent = StarterGui

    local timerLabel = Instance.new("TextLabel")
    timerLabel.Size = UDim2.new(0.25, 0, 0.05, 0)
    timerLabel.Position = UDim2.new(0.375, 0, 0.02, 0)
    timerLabel.BackgroundTransparency = 1
    timerLabel.TextScaled = true
    timerLabel.Font = Enum.Font.SourceSansBold
    timerLabel.TextColor3 = Color3.new(1, 1, 1)
    timerLabel.Text = TIMER_TEXT_TEMPLATE:format(GAME_DURATION // 60, GAME_DURATION % 60)
    timerLabel.Parent = screenGui

    -- Timer logic
    task.spawn(function()
        for i = GAME_DURATION, 0, -1 do
            timerLabel.Text = TIMER_TEXT_TEMPLATE:format(i // 60, i % 60)
            task.wait(1)
        end
        timerLabel.Text = "Time's Up!"
    end)
end

--// Player Management
Players.PlayerAdded:Connect(function(player: Player)
    setupLeaderboard(player)

    player.CharacterAdded:Connect(function(character)
        local checkpoint = player:FindFirstChild("CurrentCheckpoint")
        if checkpoint then
            task.wait(RESPAWN_DELAY)
            character:MoveTo(checkpoint.Value)
        end
    end)
end)

--// Obstacle Course
local function buildObstacleCourse()
    -- Section 1: Spinning Parts
    createSpinningPart(Vector3.new(20, 5, 0), Vector3.new(10, 1, 10), 5)
    createSpinningPart(Vector3.new(40, 5, 0), Vector3.new(10, 1, 10), -5)
    createCheckpoint(Vector3.new(60, 6, 0), 1)

    -- Section 2: Moving Platforms
    createMovingPart(Vector3.new(80, 5, -10), Vector3.new(80, 5, 10), Vector3.new(10, 1, 10), 3)
    createCheckpoint(Vector3.new(100, 6, 0), 2)

    -- Section 3: Scaling Parts
    createScalingPart(Vector3.new(120, 5, 0), Vector3.new(10, 1, 10), 1.5, 2)
    createCheckpoint(Vector3.new(140, 6, 0), 3)

    -- Section 4: Disappearing Parts
    createDisappearingPart(Vector3.new(160, 5, 0), Vector3.new(10, 1, 10), 2)
    createCheckpoint(Vector3.new(180, 6, 0), 4)
end

--// Game Start
local function startGame()
    print("Game Starting!")
    displayGameTimer()
    buildObstacleCourse()

    task.wait(GAME_DURATION)
    print("Game Over! Time's Up!")
end

startGame()
